2020-1952
q()
.2*73
.5*45
.5*52
23+14.6
22.5+14.6
mean(c(45, 45, 48))
.5*46+.2*73
mean(c(45, 45, 52))
mean(c(45, 45, 52)) + .2*73
mean(c(45, 45, 52))/2 + .2*73
mean(c(45, 48, 52))/2 + .2*73
mean(c(48, 48, 52))/2 + .2*73
mean(c(45, 45, 48))/2 + .2*73
40-37.6
17/18
require(devtools)
devtools::install
tt <- c(87, 89, 96, 93, 97, 91, 93)
mean(tt)
q()
?png
q()
install.packages('IntCal')
require(IntCal)
remove.packages('clam')
require(devtools)
install_github
install_github('maarten14C/clam')
clam()
require(clam()
)
require(clam)
clam()
sessionInfo()
remove.packages('IntCal')
remove.packages('clam')
sessionInfo()
q()
require(devtools)
sessionInfo()
install_github('maarten14C/clam')
require(clam)
clam()
calibrate()
calibrate(130,30)
remove.packages('clam')
install_github('maarten14C/clam')
clam()
.libPaths()
clam::add.dates
copyCalibrationCurve
copyCalibrationCurve()
tt = copyCalibrationCurve()
tt
195.8/100e3
100*195.8/100e3
q()
require(rbacon)
Bacon()
getwd()
q()
lehmer
2^7
q()
T
t
bid
3336887+3308054
.04 * (3336887+3308054)
.5 * .04 * (3336887+3308054)
1604067+1574206
.05 * 1604067+1574206
.05 * (1604067+1574206)
(130900+40766)
.5*(130900+40766)
.55*(130900+40766)
half = .55*(130900+40766)
half
half = .5*(130900+40766)
half
.55*(130900+40766) - half
.6*(130900+40766) - half
.57*(130900+40766) - half
require(rbacon)
>?Bacon
?Bacon
setwd("~/Dropbox/")
source("corona.R")
require(rplum)
install.packages('rplum')
require(rplum)
Bacon()
q()
source('corona.R')
q()
source('corona.R')
source('corona.R')
ls()
daily
ls()
date
source('corona.R')
rm(list=ls())
source('corona.R')
rm(list=ls())
source('corona.R')
source('corona.R')
?heat.colors
plot(1:100, 1:100, col=terrain.colors(100), pch=20)
?heat.colors
plot(1:100, 1:100, col=topo.colors(100), pch=20)
?heat.colors
plot(1:100, 1:100, col=hcl.colors(100), pch=20)
?heat.colors
?hcl.colors
hcl.pals()
plot(1:100, 1:100, col=hcl.colors(100, "BrwnYl"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Lisbon"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Fall"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Dark"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Dark 2"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Dark 1"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Dark 3"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Earth"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "ArmuyRose"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "ArmuRose"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "ArmyRose"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Lajolla"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Cividis"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Spectral"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Cork"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Tofino"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Geyser"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "BrBG"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Zissou 1"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Greys"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Grays"), pch=20)
plot(1:100, 1:100, col=hcl.colors(100, "Dynamic"), pch=20)
source("lake.R")
source("lake.R")
set.seed
runif
1L
1l
?L
??L
?rnorm
plot(1:10, col='lightblue')
plot(1:10, col='darkblue')
plot(1:10, col='blue')
colors
colors()
plot(1:10, col='azure')
plot(1:10, col='lightblue1')
plot(1:10, col='lightblue2')
plot(1:10, col='lightblue3')
source("lake.R")
source("lake.R")
ice
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
veg
temp
plot(temp)
source("lake.R")
temp
plot(temp)
plot(temp, type='l')
source("lake.R")
ice
veg
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
veg
ice
install.packages('plotrx')
install.packages('plotrix')
source("lake.R")
source("lake.R")
?draw.circle
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
ice
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
ice
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
ice
veg
source("lake.R")
source("lake.R")
plot(time, veg, type='l')
veg = temp/(max(temp) - min(temp))
veg
range(veg)
veg = temp/(max(temp) - min(temp)) - min(temp)
veg
veg = temp/(max(temp) - min(temp))
veg = veg - min(temp)
veg
range(veg)
veg = temp/(max(temp) - min(temp))
veg = veg - min(veg)
veg
veg.exx = 5
veg = temp/(max(temp) - min(temp))
veg = dev.exx * (veg - min(veg))
veg = veg.exx * (veg - min(veg))
veg
plot(time, veg)
temp
plot(temp)
plot(temp-max(tmp))
plot(temp-max(temp))
plot(max(temp)temp)
plot(max(temp)-temp)
ice = max(temp) - temp/(max(temp) - min(temp))
ice
plot(ice)
ice = max(temp) - temp/(max(temp) - min(temp))
ice = ice + min(ice)
plot(time, ice)
min(ice)
ice = max(temp) - temp/(max(temp) - min(temp))
ice = min(ice) + ice
plot(time, ice)
ice = max(temp) - temp
ice = temp - min(temp)
plot(ice)
ice = max(temp) - temp
plot(time, ice)
range(ice)
ice = ice.exx * (max(temp) - temp)
plot(time, ice)
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
?draw.ellipse
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
colors()
plot(1:10, col='skyblue')
plot(1:10, col='skyblue1')
plot(1:10, col='skyblue2')
plot(1:10, col='skyblue3')
plot(1:10, col='skyblue4')
plot(1:10, col='skyblue5')
source("lake.R")
hcl.pals()
?hcl.pals
plot(1:100, pch=20, col=hcl.colors(100,"Turku"))
hcl.colors(1:100, "Turku")
plot(1:100, pch=20, col=hcl.colors(100,"Burg"))
plot(1:100, pch=20, col=hcl.colors(100,"BuGn"))
plot(1:100, pch=20, col=hcl.colors(100,"Plasma"))
plot(1:100, pch=20, col=hcl.colors(100,"Peach"))
plot(temp)
hcl.colors(1:100, "Turku")
plot(1:100, pch=20, col=hcl.colors(100,"Turku"))
source("lake.R")
sed.seq
source("lake.R")
sed.seq
source("lake.R")
sed.seq
source("lake.R")
source("lake.R")
source("lake.R")
sed
source("lake.R")
sed
source("lake.R")
sed.seq
sed
source("lake.R")
sed
sed.seq
range(sed.seq)
?order
source("lake.R")
sed
o
sed.cols
source("lake.R")
sed.cols
source("lake.R")
sed.cols
sed.seq
source("lake.R")
sed.seq
sed.cols
source("lake.R")
sed.cols
plot(time, sed)
source("lake.R")
plot(time, sed, )
sed
o
sed.cols
source("lake.R")
sed
source("lake.R")
source("lake.R")
lake.y
source("lake.R")
lake.y
plot(lake.y)
source("lake.R")
source("lake.R")
lake.y
source("lake.R")
lake.y
range(lake.y)
1e1
lake.y
plot(lake.y)
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
polygon(basin, col=earth.col, border=NA)
dir.create("lake_pngs")
source("lake.R")
source("lake.R")
source("lake.R")
?png
source("lake.R")
?par
source("lake.R")
temp
lines
temp
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
time.seq
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
source("lake.R")
tt = list.files("lake_pngs/", pattern=".png")
lenght(tt)
length(tt)
hcl.pals()
plot(1:10, pch=20, col=hcl.colors(10, "Blue-Red")
)
dev.off()
plot(1:10, pch=20, col=hcl.colors(10, "Blue-Red"))
plot(1:10, pch=20, col=hcl.colors(10, "Blue-Red 2"))
plot(1:10, pch=20, col=hcl.colors(10, "Blue-Red 3"))
plot(1:10, pch=20, col=hcl.colors(10, "Blue-Red 2"))
source("lake.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
?dir.create
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
source("lake2.R")
q()
source("corona.R")
.1 *1000 * 1000
.1 * 2^(1:100)
plot(1:100, .1 * 2^(1:100), log='y')
plot(1:100, .1 * 2^(1:100), pch=".")
dev.off()
plot(1:100, .1 * 2^(1:100), pch=".")
plot(1:100, .1 * 2^(1:100), type='l')
plot(0:50, .1 * 2^(0:50), type='l')
plot(0:50, .1 * 2^(0:50)/1e6, type='l')
abline(v=384400)
abline(h=384400)
plot(0:45, .1 * 2^(0:45)/1e6, type='l')
abline(h=384400)
plot(0:44, .1 * 2^(0:44)/1e6, type='l')
abline(h=384400)
plot(0:43, .1 * 2^(0:43)/1e6, type='l')
abline(h=384400)
.1 * 2^(0:43)
cbind(.1 * 2^(0:43))
getwd()
require(rbacon)
q()
require(rbacon)
Bacon("Ramya")
Bacon("Ramya", postbomb=1)
Bacon("Ramya", postbomb=1)
Bacon.cleanup()
Bacon("Ramya", postbomb=1)
info$calib$probs]
info$calib$probs
info$calib$probs[[1]]
require(rbacon)
Bacon("Ramya", postbomb=1)
q()
require(rbacon)
Bacon("Ramya", postbomb=1)
agedepth(height=2)
agedepth(height=5)
agedepth(same.heights=T)
agedepth(same.heights=T,height=.001)
agedepth(same.heights=T,height=.01)
agedepth(same.heights=T,height=.02)
array(NA,dim=c(2,5))
getwd()
q()
source('corona.R')
q()
source('corona.R')
q()
source('corona.R')
setwd("github_site/GSA_agemodeling/")
require(devtools)
render('session_1.Rmd')
require(rmarkdown)
render('session_1.Rmd')
draw.dates
i <- 99
i %% 100
i %% 100 == 0
100 %% 100 == 0
500 %% 100 == 0
txtProgressBar
?txtProgressBar
source('corona.R')
getwd()
q()
